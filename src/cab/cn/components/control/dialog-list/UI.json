{
    "_title": "UC0004 - 「自定义组件」DialogList",
    "_demo": {
        "buttons": [
            {
                "key": "$opSave",
                "text": "按钮保存",
                "message": "您点击了保存按钮"
            },
            {
                "key": "$opReset",
                "text": "按钮重置",
                "message": "您点击了重置按钮"
            }
        ]
    },
    "_attribute": {
        "hoc": {
        },
        "props": {
        }
    },
    "_datalist": {
        "UI.Demo.js": [
            {
                "source": "R",
                "provider": "当前组件",
                "consumer": "<ComplexList/>",
                "name": "reference",
                "category": "React.Reference",
                "comment": "ComplexList调用者可直接通过reference={this}的方式传入数据。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "<ComplexList/>",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "<ComplexList/>",
                "name": "$items",
                "category": "DataObject",
                "comment": "子列表专用的数据信息（不同的Tab页子列表的数据不一致）。"
            },
            {
                "source": "Z",
                "provider": "Zero框架封装",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "该对象数据不会直接传给ComplexList，而是在ComplexList内部直接抽取。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "consumer": "<ComplexList/>",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "I",
                "provider": "导入绑定的Op",
                "consumer": "<ComplexList/>",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "「必须」初始化list.items的专用函数，在使用ComplexList和DialogList结合时，点开已存在记录时必须初始化list.items执行Redux状态管理"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "consumer": "<ComplexList/>",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "consumer": "<ComplexList/>",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "J",
                "provider": "来自Json导入",
                "consumer": "<ComplexList/>",
                "name": "$mockData",
                "category": "Json",
                "comment": "导入Mock数据，Mock环境专用。"
            },
            {
                "source": "I",
                "provider": "来自React导入",
                "consumer": "<ComplexList/>",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「过滤」表单组件。"
            },
            {
                "source": "I",
                "provider": "来自React导入",
                "consumer": "<ComplexList/>",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「添加」表单组件（表单 + DialogList）。"
            },
            {
                "source": "I",
                "provider": "来自React导入",
                "consumer": "<ComplexList/>",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「编辑」表单组件（表单 + DialogList）。"
            }
        ],
        "UI.Demo.Filter.js": [
            {
                "source": "R",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是ComplexList组件本身。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "$cond",
                "category": "Array",
                "comment": "ComplexList提供给Filter的搜索条件。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "初始化list.items专用。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formFilter",
                "name": "$list",
                "category": "DataObject",
                "comment": "主列表呈现的「本页数据」。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formFilter",
                "name": "$items",
                "category": "DataObject",
                "comment": "子列表中的列表信息等数据。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formFilter",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "J",
                "provider": "当前组件",
                "consumer": "$formFilter",
                "name": "$mockData",
                "category": "Object",
                "comment": "模拟数据。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "$inited",
                "category": "Object",
                "comment": "初始查询条件。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "$page",
                "category": "String",
                "comment": "固定数据，设置搜索框的宽度。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "fnTerm",
                "category": "Function",
                "comment": "设置搜索框中文字函数。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formFilter",
                "name": "fnQueryDefault",
                "category": "Function",
                "comment": "读取默认查询参数的函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formFilter",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formFilter",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formFilter",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            }
        ],
        "UI.Demo.Add.js": [
            {
                "source": "R",
                "provider": "<ComplexList/>",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是ComplexList组件本身。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$list",
                "category": "DataObject",
                "comment": "主列表呈现的「本页数据」。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$items",
                "category": "DataObject",
                "comment": "状态树上的list.items对应的数据。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "J",
                "provider": "当前组件",
                "name": "$mockData",
                "category": "Object",
                "comment": "模拟数据。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "传入的专用编辑后的回调函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            }
        ],
        "UI.Demo.Add.Major.js": [
            {
                "source": "R",
                "provider": "<ComplexList/>",
                "consumer": "$formAdd",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是ComplexList组件本身。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$items",
                "category": "DataObject",
                "comment": "状态树上的list.items对应的数据。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formAdd",
                "name": "$list",
                "category": "DataObject",
                "comment": "主列表呈现的「本页数据」。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formAdd",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "J",
                "provider": "当前组件",
                "consumer": "$formAdd",
                "name": "$mockData",
                "category": "Object",
                "comment": "模拟数据。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "传入的专用编辑后的回调函数。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formAdd",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formAdd",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formAdd",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formAdd",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd",
                "name": "$op",
                "secondary": "$opAdd",
                "category": "Function",
                "comment": "被连接的「添加」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd",
                "name": "$op",
                "secondary": "$opSave",
                "category": "Function",
                "comment": "被连接的「编辑」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd",
                "name": "$op",
                "secondary": "$opReset",
                "category": "Function",
                "comment": "「添加」和「编辑」的重置函数。"
            }
        ],
        "UI.Demo.Edit.js": [
            {
                "source": "R",
                "provider": "<ComplexList/>",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是ComplexList组件本身。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$list",
                "category": "DataObject",
                "comment": "主列表呈现的「本页数据」。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$items",
                "category": "DataObject",
                "comment": "状态树上的list.items对应的数据。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "J",
                "provider": "当前组件",
                "name": "$mockData",
                "category": "Object",
                "comment": "模拟数据。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "传入的专用编辑后的回调函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            }
        ],
        "UI.Demo.Edit.Major.js": [
            {
                "source": "R",
                "provider": "<ComplexList/>",
                "consumer": "$formEdit",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是ComplexList组件本身。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formEdit",
                "name": "$inited",
                "category": "Object",
                "comment": "当前编辑界面的初始化数据。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$items",
                "consumer": "$formEdit",
                "category": "DataObject",
                "comment": "状态树上的list.items对应的数据。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "传入的专用编辑后的回调函数。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formEdit",
                "name": "$list",
                "category": "DataObject",
                "comment": "主列表呈现的「本页数据」。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formEdit",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "J",
                "provider": "当前组件",
                "consumer": "$formEdit",
                "name": "$mockData",
                "category": "Object",
                "comment": "模拟数据。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formEdit",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formEdit",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formEdit",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formEdit",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formEdit",
                "name": "$op",
                "secondary": "$opAdd",
                "category": "Function",
                "comment": "被连接的「添加」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formEdit",
                "name": "$op",
                "secondary": "$opSave",
                "category": "Function",
                "comment": "被连接的「编辑」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formEdit",
                "name": "$op",
                "secondary": "$opReset",
                "category": "Function",
                "comment": "「添加」和「编辑」的重置函数。"
            }
        ],
        "UI.Demo.Dialog.js": [
            {
                "source": "R",
                "provider": "<DialogList/>",
                "consumer": "$formAdd | $formEdit",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是DialogList组件本身。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formAdd",
                "name": "$addKey",
                "category": "String",
                "comment": "「添加专用」添加模式中的激活Tab的key信息。"
            },
            {
                "source": "C",
                "provider": "<ComplexList/>",
                "consumer": "$formEdit",
                "name": "$key",
                "category": "String",
                "comment": "「编辑专用」编辑模式中的专用主键，激活的Tab对应key信息。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「禁止」直接继承的属性。"
            },
            {
                "source": "C",
                "provider": "<DialogList/>",
                "consumer": "$formAdd | $formEdit",
                "name": "$inited",
                "category": "Object",
                "comment": "弹出Dialog对话框的初始化数据信息。"
            },
            {
                "source": "C",
                "provider": "<DialogList/>",
                "consumer": "$formAdd | $formEdit",
                "name": "$parent",
                "category": "Object",
                "comment": "主记录数据信息。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formAdd | $formEdit",
                "name": "$list",
                "category": "DataObject",
                "comment": "主列表呈现的「本页数据」。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formAdd | $formEdit",
                "name": "$items",
                "category": "DataObject",
                "comment": "保存在状态树上的激活部分的list.items信息。"
            },
            {
                "source": "J",
                "provider": "当前组件",
                "consumer": "$formAdd | $formEdit",
                "name": "$mockData",
                "category": "Object",
                "comment": "模拟数据。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "C",
                "provider": "<DialogList/>",
                "consumer": "$formAdd | $formEdit",
                "name": "fnClear",
                "category": "Function",
                "comment": "清除函数专用。"
            },
            {
                "source": "C",
                "provider": "<DialogList/>",
                "consumer": "$formAdd | $formEdit",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭当前弹出来的窗口信息。"
            },
            {
                "source": "C",
                "provider": "<DialogList/>",
                "consumer": "$formAdd | $formEdit",
                "name": "fnListItem",
                "category": "Function",
                "comment": "更新list.items的专用方法，用于提供给OP中的代码逻辑更新lite.items。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "<ComplexList/>",
                "name": "fnMock",
                "category": "Function",
                "comment": "模拟数据专用方法。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formAdd | $formEdit",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」ComplexList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxEditPost",
                "category": "Function",
                "comment": "「编辑」初始化list.items的专用方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "name": "rxDelete",
                "category": "Function",
                "comment": "「编辑」删除时的回调专用方法。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formAdd | $formEdit",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formAdd | $formEdit",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd | $formEdit",
                "name": "$op",
                "secondary": "$opSubAdd",
                "category": "Function",
                "comment": "被连接的「添加」窗口表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd | $formEdit",
                "name": "$op",
                "secondary": "$opSubSave",
                "category": "Function",
                "comment": "被连接的「编辑」窗口表单提交函数。"
            }
        ]
    },
    "_datatree": {
        "title": "<Root>",
        "children": [
            {
                "title": "UI.Demo.js",
                "children": [
                    {
                        "title": "UI.Demo.Filter.js"
                    },
                    {
                        "title": "UI.Demo.Add.js",
                        "children": [
                            {
                                "title": "UI.Demo.Add.Major.js"
                            },
                            {
                                "title": "UI.Demo.Dialog.js"
                            }
                        ]
                    },
                    {
                        "title": "UI.Demo.Edit.js",
                        "children": [
                            {
                                "title": "UI.Demo.Edit.Major.js"
                            },
                            {
                                "title": "UI.Demo.Dialog.js"
                            }
                        ]
                    }
                ]
            },
            {
                "title": "Op.ts",
                "children": [
                    {
                        "title": "Op.Act.ts"
                    },
                    {
                        "title": "Op.Sub.ts"
                    }
                ]
            }
        ]
    },
    "_diagram": {
        "layout": {
            "height": 1800
        },
        "items": {
            "nodes": [
                "parent,UI.js,#9cf",
                "rxInject,rxInject( data ),#cfc",
                "rxSet,rxSet( key ),#cfc",
                "props",
                "redux,Redux,#ccf",
                "fnOut,fnOut,#cfc",
                "rxSearch,rxSearch( params ),#cfc",
                "current,UI.Demo.js,#9cf",
                "resource,UI.Demo.json,#ccf",
                "$hoc",
                "state",
                "_page",
                "_grid",
                "query",
                "options",
                "table",
                "_container,HelpCard,#9cf",
                "_children,children",
                "_component,ComplexList,#9cf",
                "_props,props",
                "_self,reference",
                "rxEditPost,rxEditPost( record id ),#cfc",
                "rxDeletePost,rxDeletePost( record id ),#cfc",
                "rxViewSwitch,rxViewSwitch( view id ),#cfc",
                "$mockData",
                "$formFilter,$formFilter,#9cf",
                "$formAdd,$formAdd,#9cf",
                "$formEdit,$formEdit,#9cf",
                "_resource,UI.json,#ccf",
                "_$hoc,$hoc",
                "_state,state",
                "Tabs,Tabs,#fc9",
                "Tabs0,Tabs.TabPane[0],#fc9",
                "TabAdd,Button ( op.add ),#fc9",
                "TabsX,Tabs.TabPane[Add],#fc9",
                "TabsE,Tabs.TabPane[Edit],#fc9",
                "Table,Table,#fc9",
                "Column[X],Column[X] - Op,#fc9",
                "Drawer,Drawer,#fc9",
                "_J.UI.Filter,UI.Demo.Filter.json,#ccf",
                "_J.F.$hoc,$hoc",
                "UI.Filter,UI.Demo.Filter.js,#9cf",
                "_J.UI.Add,UI.Demo.Add.json,#ccf",
                "_J.A.$hoc,$hoc",
                "UI.Add,UI.Demo.Add.js,#9cf",
                "_J.UI.Edit,UI.Demo.Edit.json,#ccf",
                "_J.E.$hoc,$hoc",
                "UI.Edit,UI.Demo.Edit.js,#9cf",
                "$page",
                "$cond",
                "fnTerm,fnTerm( term ),#cfc",
                "fnQueryDefault,fnQueryDefault( ),#cfc",
                "filterOnly,Filter专用,#efefef",
                "_J.UI.Edit.Major,UI.Demo.Edit.Major.json,#ccf",
                "_J.EM.$hoc,$hoc",
                "UI.Edit.Major,UI.Demo.Edit.Major.js,#9cf",
                "_J.UI.Add.Major,UI.Demo.Add.Major.json,#ccf",
                "_J.AM.$hoc,$hoc",
                "UI.Add.Major,UI.Demo.Add.Major.js,#9cf",
                "UI.Dialog,UI.Demo.Dialog.js,#9cf",
                "_ENTRY,按提交模式分类,#efefef",
                "_MODE_ADD_ADD,ADD-ADD - 双添加模式,#efefef",
                "_AA_fnListItem,fnListItem( id values ),#cfc",
                "_AA_$inited,$inited（无值）",
                "_AA_$parent,$parent（无值）",
                "_AA_$addKey,$addKey",
                "_MODE_ADD_EDIT,ADD-EDIT - 添加编辑,#efefef",
                "_AE_fnListItem,fnListItem( id values ),#cfc",
                "_AE_$inited,$inited（有值）",
                "_AE_$parent,$parent（无值）",
                "_AE_$addKey,$addKey",
                "_MODE_EDIT_ADD,EDIT-ADD - 编辑添加,#efefef",
                "_EA_fnListItem,fnListItem( id values ),#cfc",
                "_EA_$inited,$inited（无值）",
                "_EA_$parent,$parent（有值）",
                "_EA_$addKey,$addKey",
                "_MODE_EDIT_EDIT,EDIT-EDIT - 双编辑模式,#efefef",
                "_EE_fnListItem,fnListItem( id values ),#cfc",
                "_EE_$inited,$inited（有值）",
                "_EE_$parent,$parent（有值）",
                "_EE_$addKey,$addKey"
            ],
            "edges": [
                "parent,rxInject",
                "parent,rxSet",
                "rxInject,props",
                "rxSet,props",
                "redux,fnOut",
                "redux,rxSearch",
                "fnOut,props",
                "rxSearch,props",
                "props,current",
                "resource,$hoc",
                "$hoc,_page",
                "$hoc,_grid",
                "_grid,query",
                "_grid,options",
                "_grid,table",
                "query,state",
                "table,state",
                "options,state",
                "state,current",
                "current,_container",
                "_container,_children",
                "_resource,_$hoc",
                "_$hoc,_state",
                "_state,_component",
                "current,_self",
                "current,$mockData",
                "current,$formFilter",
                "$formFilter,$formAdd",
                "$formAdd,$formEdit",
                "current,rxEditPost",
                "rxEditPost,rxDeletePost",
                "rxDeletePost,rxViewSwitch",
                "rxViewSwitch,_props",
                "_self,_props",
                "_children,_component",
                "$mockData,_props",
                "$formEdit,_props",
                "_props,_component",
                "_component,Tabs",
                "Tabs,Tabs0",
                "Tabs,TabAdd",
                "TabAdd,TabsX",
                "TabsX,UI.Add",
                "_J.UI.Add,_J.A.$hoc",
                "_J.A.$hoc,UI.Add",
                "_J.UI.Add.Major,_J.AM.$hoc",
                "_J.AM.$hoc,UI.Add.Major",
                "UI.Add,UI.Add.Major",
                "_J.UI.Filter,_J.F.$hoc",
                "_J.F.$hoc,UI.Filter",
                "Tabs0,Drawer",
                "Drawer,UI.Filter",
                "UI.Filter,filterOnly",
                "filterOnly,$cond",
                "$cond,$page",
                "$page,fnTerm",
                "fnTerm,fnQueryDefault",
                "Tabs0,Table",
                "Table,Column[X]",
                "Column[X],TabsE",
                "TabsE,UI.Edit",
                "_J.UI.Edit,_J.E.$hoc",
                "_J.E.$hoc,UI.Edit",
                "_J.UI.Edit.Major,_J.EM.$hoc",
                "_J.EM.$hoc,UI.Edit.Major",
                "UI.Edit,UI.Edit.Major",
                "UI.Add,UI.Dialog",
                "UI.Edit,UI.Dialog",
                "_MODE_ADD_ADD,_AA_fnListItem",
                "_AA_fnListItem,_AA_$parent",
                "_AA_$parent,_AA_$inited",
                "_AA_$inited,_AA_$addKey",
                "_MODE_ADD_EDIT,_AE_fnListItem",
                "_AE_fnListItem,_AE_$parent",
                "_AE_$parent,_AE_$inited",
                "_AE_$inited,_AE_$addKey",
                "_MODE_EDIT_ADD,_EA_fnListItem",
                "_EA_fnListItem,_EA_$parent",
                "_EA_$parent,_EA_$inited",
                "_EA_$inited,_EA_$addKey",
                "_MODE_EDIT_EDIT,_EE_fnListItem",
                "_EE_fnListItem,_EE_$parent",
                "_EE_$parent,_EE_$inited",
                "_EE_$inited,_EE_$addKey",
                "UI.Dialog,_ENTRY",
                "_ENTRY,_MODE_ADD_ADD",
                "_ENTRY,_MODE_ADD_EDIT",
                "_ENTRY,_MODE_EDIT_ADD",
                "_ENTRY,_MODE_EDIT_EDIT"
            ]
        }
    }
}