{
    "_title": "UC0006 - 「自定义组件」TabList",
    "_attribute": {
        "props": {
        },
        "hoc": {
        }
    },
    "_datatree": {
        "title": "<Root>",
        "children": [
            {
                "title": "UI.Demo.js",
                "children": [
                    {
                        "title": "UI.Demo.Filter.js"
                    },
                    {
                        "title": "UI.Demo.Form.Add.js"
                    },
                    {
                        "title": "UI.Demo.Form.Edit.js"
                    }
                ]
            },
            {
                "title": "Op.ts"
            }
        ]
    },
    "_datalist": {
        "UI.Demo.js": [
            {
                "source": "R",
                "provider": "当前组件",
                "consumer": "<TabList/>",
                "name": "reference",
                "category": "React.Reference",
                "comment": "TabList调用者可直接通过reference={this}的方式传入数据。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "<TabList/>",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架封装",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "该对象数据不会直接传给TabList，而是在TabList内部直接抽取。"
            },
            {
                "source": "I",
                "provider": "当前组件",
                "consumer": "<TabList/>",
                "name": "rxAddRow",
                "category": "Function",
                "comment": "快速行添加模式中对应的行添加专用函数。"
            },
            {
                "source": "E",
                "provider": "Epic封装结果",
                "consumer": "<TabList/>",
                "name": "rxSearch",
                "category": "Function",
                "comment": "「必须」TabList的核心方法。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "consumer": "<TabList/>",
                "name": "rxInject",
                "category": "Function",
                "comment": "操作「属性连接器」，修改options或props属性。"
            },
            {
                "source": "R",
                "provider": "当前组件",
                "consumer": "<TabList/>",
                "name": "rxSet",
                "category": "Function",
                "comment": "操作「属性连接器」，读取state中的set = {}。"
            },
            {
                "source": "J",
                "provider": "来自Json导入",
                "consumer": "<TabList/>",
                "name": "$mockData",
                "category": "Json",
                "comment": "导入Mock数据，Mock环境专用。"
            },
            {
                "source": "I",
                "provider": "来自React导入",
                "consumer": "<TabList/>",
                "name": "$formFilter",
                "category": "React.Component",
                "comment": "「过滤」表单组件。"
            },
            {
                "source": "I",
                "provider": "来自React导入",
                "consumer": "<TabList/>",
                "name": "$formAdd",
                "category": "React.Component",
                "comment": "「添加」表单组件。"
            },
            {
                "source": "I",
                "provider": "来自React导入",
                "consumer": "<TabList/>",
                "name": "$formEdit",
                "category": "React.Component",
                "comment": "「编辑」表单组件。"
            }
        ],
        "UI.Demo.Filter.js": [
            {
                "source": "R",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是TabList组件本身。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "$cond",
                "category": "Array",
                "comment": "TabList提供给Filter的搜索条件。"
            },
            {
                "source": "X",
                "provider": "Redux状态树",
                "consumer": "$formFilter",
                "name": "$query",
                "category": "DataObject",
                "comment": "主列表中的「查询条件」。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "$inited",
                "category": "Object",
                "comment": "初始查询条件。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "$page",
                "category": "String",
                "comment": "固定数据，设置搜索框的宽度。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "fnTerm",
                "category": "Function",
                "comment": "设置搜索框中文字函数。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formFilter",
                "name": "fnQueryDefault",
                "category": "Function",
                "comment": "读取默认查询参数的函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formFilter",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formFilter",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formFilter",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            }
        ],
        "UI.Demo.Form.Add.js": [
            {
                "source": "R",
                "provider": "<TabList/>",
                "consumer": "$formAdd",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是TabList组件本身。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formAdd",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formAdd",
                "name": "fnView",
                "category": "Function",
                "comment": "切换当前Tab页到Edit状态的标签函数。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formAdd",
                "name": "fnMock",
                "category": "Function",
                "comment": "模拟数据专用函数，可生成当前添加记录的模拟数据。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formAdd",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formAdd",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formAdd",
                "name": "$addKey",
                "category": "String",
                "comment": "临时生成的添加主记录的ID信息。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formAdd",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd",
                "name": "$op",
                "secondary": "$opAdd",
                "category": "Function",
                "comment": "被连接的「添加」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "name": "$op",
                "secondary": "$opSave",
                "category": "Function",
                "comment": "被连接的「编辑」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formAdd",
                "name": "$op",
                "secondary": "$opReset",
                "category": "Function",
                "comment": "「添加」和「编辑」的重置函数。"
            }
        ],
        "UI.Demo.Form.Edit.js": [
            {
                "source": "R",
                "provider": "<TabList/>",
                "consumer": "$formEdit",
                "name": "reference",
                "category": "React.Reference",
                "comment": "这里的引用是TabList组件本身。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formEdit",
                "name": "$inited",
                "category": "Object",
                "comment": "当前编辑界面的初始化数据。"
            },
            {
                "source": "C",
                "provider": "<TabList/>",
                "consumer": "$formEdit",
                "name": "fnClose",
                "category": "Function",
                "comment": "关闭Tab标签页函数。"
            },
            {
                "source": "X",
                "provider": "Zero框架封装",
                "consumer": "$formEdit",
                "name": "fnOut",
                "category": "Function",
                "comment": "直接调用了全局的Action来写状态树专用。"
            },
            {
                "source": "A",
                "provider": "Ant Design框架",
                "consumer": "$formEdit",
                "name": "form",
                "category": "Object",
                "comment": "Ant Design Form专用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架",
                "consumer": "$formEdit",
                "name": "$hoc",
                "category": "HocI18n",
                "comment": "在当前组件中可直接使用。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "name": "$op",
                "secondary": "$opAdd",
                "category": "Function",
                "comment": "被连接的「添加」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formEdit",
                "name": "$op",
                "secondary": "$opSave",
                "category": "Function",
                "comment": "被连接的「编辑」表单提交函数。"
            },
            {
                "source": "Z",
                "provider": "Zero框架绑定Op",
                "consumer": "$formEdit",
                "name": "$op",
                "secondary": "$opReset",
                "category": "Function",
                "comment": "「添加」和「编辑」的重置函数。"
            }
        ]
    },
    "_diagram": {
        "items": {
            "nodes": [],
            "edges": []
        }
    }
}